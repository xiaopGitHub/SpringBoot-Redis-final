package com.oneconnect.sg.annotations;

import com.oneconnect.sg.common.ErrorCodeConstant;
import com.oneconnect.sg.common.exception.InvalidInputException;

import javax.validation.Constraint;
import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;
import javax.validation.Payload;
import java.lang.annotation.*;

@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.ANNOTATION_TYPE, ElementType.FIELD, ElementType.PARAMETER})
@Documented
@Constraint(validatedBy = ValidId.ValidIdValidator.class)
public @interface ValidId {

    ErrorCodeConstant errorCode() default ErrorCodeConstant.SYSTEM_ERROR;

    String message() default "invalid id";

    Class<?>[] groups() default {};

    Class<? extends Payload>[] payload() default {};

    class ValidIdValidator implements ConstraintValidator<ValidId, Long> {
        private ErrorCodeConstant errorCode;

        @Override
        public void initialize(ValidId constraintAnnotation) {
            this.errorCode = constraintAnnotation.errorCode();
        }

        @Override
        public boolean isValid(Long s, ConstraintValidatorContext constraintValidatorContext) {
            if (s != null && s > 0) {
                return true;
            }
            throw new InvalidInputException(errorCode);
        }
    }
}
